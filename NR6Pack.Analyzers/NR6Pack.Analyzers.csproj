<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{4965F6D2-DE1E-48DE-9A63-688632266649}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>NR6Pack.Analyzers</RootNamespace>
    <AssemblyName>NR6Pack.Analyzers</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile7</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Custom\RedundantInternalIssue.cs">
      <Link>CodeIssues\RedundantInternalIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Custom\RedundantPrivateIssue.cs">
      <Link>CodeIssues\RedundantPrivateIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\IssueCategories.cs">
      <Link>Common\IssueCategories.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\IssueMarker.cs">
      <Link>Common\IssueMarker.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\NRefactoryCodeFixProvider.cs">
      <Link>Common\NRefactoryCodeFixProvider.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\BaseMethodCallWithDefaultParameterIssue.cs">
      <Link>CodeIssues\CodeQuality\BaseMethodCallWithDefaultParameterIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\BitwiseOperatorOnEnumWithoutFlagsIssue.cs">
      <Link>CodeIssues\CodeQuality\BitwiseOperatorOnEnumWithoutFlagsIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\CanBeReplacedWithTryCastAndCheckForNullIssue.cs">
      <Link>CodeIssues\CodeQuality\CanBeReplacedWithTryCastAndCheckForNullIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\CompareNonConstrainedGenericWithNullIssue.cs">
      <Link>CodeIssues\CodeQuality\CompareNonConstrainedGenericWithNullIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\CompareOfFloatsByEqualityOperatorIssue.cs">
      <Link>CodeIssues\CodeQuality\CompareOfFloatsByEqualityOperatorIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\ConditionalTernaryEqualBranchIssue.cs">
      <Link>CodeIssues\CodeQuality\ConditionalTernaryEqualBranchIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\DelegateSubtractionIssue.cs">
      <Link>CodeIssues\CodeQuality\DelegateSubtractionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\DoNotCallOverridableMethodsInConstructorIssue.cs">
      <Link>CodeIssues\CodeQuality\DoNotCallOverridableMethodsInConstructorIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\EmptyGeneralCatchClauseIssue.cs">
      <Link>CodeIssues\CodeQuality\EmptyGeneralCatchClauseIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\EqualExpressionComparisonIssue.cs">
      <Link>CodeIssues\CodeQuality\EqualExpressionComparisonIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\EventUnsubscriptionViaAnonymousDelegateIssue.cs">
      <Link>CodeIssues\CodeQuality\EventUnsubscriptionViaAnonymousDelegateIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\ForControlVariableIsNeverModifiedIssue.cs">
      <Link>CodeIssues\CodeQuality\ForControlVariableIsNeverModifiedIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\FormatStringProblemIssue.cs">
      <Link>CodeIssues\CodeQuality\FormatStringProblemIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\FunctionNeverReturnsIssue.cs">
      <Link>CodeIssues\CodeQuality\FunctionNeverReturnsIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\LocalVariableHidesMemberIssue.cs">
      <Link>CodeIssues\CodeQuality\LocalVariableHidesMemberIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\LongLiteralEndingLowerLIssue.cs">
      <Link>CodeIssues\CodeQuality\LongLiteralEndingLowerLIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\MemberHidesStaticFromOuterClassIssue.cs">
      <Link>CodeIssues\CodeQuality\MemberHidesStaticFromOuterClassIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\MethodOverloadWithOptionalParameterIssue.cs">
      <Link>CodeIssues\CodeQuality\MethodOverloadWithOptionalParameterIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\NonReadonlyReferencedInGetHashCodeIssue.cs">
      <Link>CodeIssues\CodeQuality\NonReadonlyReferencedInGetHashCodeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\NotResolvedInTextIssue.cs">
      <Link>CodeIssues\CodeQuality\NotResolvedInTextIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\ObjectCreationAsStatementIssue.cs">
      <Link>CodeIssues\CodeQuality\ObjectCreationAsStatementIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\OperatorIsCanBeUsedIssue.cs">
      <Link>CodeIssues\CodeQuality\OperatorIsCanBeUsedIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\OptionalParameterHierarchyMismatchIssue.cs">
      <Link>CodeIssues\CodeQuality\OptionalParameterHierarchyMismatchIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\OptionalParameterRefOutIssue.cs">
      <Link>CodeIssues\CodeQuality\OptionalParameterRefOutIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\ParameterHidesMemberIssue.cs">
      <Link>CodeIssues\CodeQuality\ParameterHidesMemberIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\PartialMethodParameterNameMismatchIssue.cs">
      <Link>CodeIssues\CodeQuality\PartialMethodParameterNameMismatchIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\PolymorphicFieldLikeEventInvocationIssue.cs">
      <Link>CodeIssues\CodeQuality\PolymorphicFieldLikeEventInvocationIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\PossibleAssignmentToReadonlyFieldIssue.cs">
      <Link>CodeIssues\CodeQuality\PossibleAssignmentToReadonlyFieldIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\PossibleMultipleEnumerationIssue.cs">
      <Link>CodeIssues\CodeQuality\PossibleMultipleEnumerationIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\StaticFieldInGenericTypeIssue.cs">
      <Link>CodeIssues\CodeQuality\StaticFieldInGenericTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\ThreadStaticAtInstanceFieldIssue.cs">
      <Link>CodeIssues\CodeQuality\ThreadStaticAtInstanceFieldIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CodeQuality\ValueParameterNotUsedIssue.cs">
      <Link>CodeIssues\CodeQuality\ValueParameterNotUsedIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CompilerErrors\ProhibitedModifiersIssue.cs">
      <Link>CodeIssues\CompilerErrors\ProhibitedModifiersIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CompilerWarnings\CS0183ExpressionIsAlwaysOfProvidedTypeIssue.cs">
      <Link>CodeIssues\CompilerWarnings\CS0183ExpressionIsAlwaysOfProvidedTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CompilerWarnings\CS1573ParameterHasNoMatchingParamTagIssue.cs">
      <Link>CodeIssues\CompilerWarnings\CS1573ParameterHasNoMatchingParamTagIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CompilerWarnings\CS1717AssignmentMadeToSameVariableIssue.cs">
      <Link>CodeIssues\CompilerWarnings\CS1717AssignmentMadeToSameVariableIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\CompilerWarnings\UnassignedReadonlyFieldIssue.cs">
      <Link>CodeIssues\CompilerWarnings\UnassignedReadonlyFieldIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\NUnit\NonPublicMethodWithTestAttributeIssue.cs">
      <Link>CodeIssues\NUnit\NonPublicMethodWithTestAttributeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertClosureToMethodGroupIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertClosureToMethodGroupIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertConditionalTernaryToNullCoalescingIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertConditionalTernaryToNullCoalescingIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertIfStatementToConditionalTernaryExpressionIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertIfStatementToConditionalTernaryExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertIfStatementToNullCoalescingExpressionIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertIfStatementToNullCoalescingExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertIfStatementToSwitchStatementIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertIfStatementToSwitchStatementIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertNullableToShortFormIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertNullableToShortFormIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertToAutoPropertyIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertToAutoPropertyIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertToLambdaExpressionIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertToLambdaExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ConvertToStaticTypeIssue.cs">
      <Link>CodeIssues\Opportunities\ConvertToStaticTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\ForCanBeConvertedToForeachIssue.cs">
      <Link>CodeIssues\Opportunities\ForCanBeConvertedToForeachIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\InvokeAsExtensionMethodIssue.cs">
      <Link>CodeIssues\Opportunities\InvokeAsExtensionMethodIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\RewriteIfReturnToReturnIssue.cs">
      <Link>CodeIssues\Opportunities\RewriteIfReturnToReturnIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\Opportunities\SuggestUseVarKeywordEvidentIssue.cs">
      <Link>CodeIssues\Opportunities\SuggestUseVarKeywordEvidentIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\AccessToStaticMemberViaDerivedTypeIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\AccessToStaticMemberViaDerivedTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\BaseMemberHasParamsIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\BaseMemberHasParamsIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ConvertIfDoToWhileIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ConvertIfDoToWhileIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ConvertIfToOrExpressionIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ConvertIfToOrExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ConvertToConstantIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ConvertToConstantIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\EmptyEmbeddedStatementIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\EmptyEmbeddedStatementIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\FieldCanBeMadeReadOnlyIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\FieldCanBeMadeReadOnlyIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\MemberCanBeMadeStaticIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\MemberCanBeMadeStaticIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ParameterCanBeDeclaredWithBaseTypeIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ParameterCanBeDeclaredWithBaseTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\PossibleMistakenCallToGetTypeIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\PossibleMistakenCallToGetTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\PublicConstructorInAbstractClass.cs">
      <Link>CodeIssues\PracticesAndImprovements\PublicConstructorInAbstractClass.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReferenceEqualsWithValueTypeIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReferenceEqualsWithValueTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithFirstOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithFirstOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithLastOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithLastOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeAny.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeAny.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeCountIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeCountIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeFirstIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeFirstOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeLastIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeLastOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeLongCountIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeLongCountIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeSingleIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeSingleOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithOfTypeWhereIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithOfTypeWhereIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSimpleAssignmentIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSimpleAssignmentIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToAnyIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToAnyIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToCountIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToCountIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToFirstIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToFirstOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToLastIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToLastOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLongCountIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToLongCountIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToSingleIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleOrDefaultIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithSingleCallToSingleOrDefaultIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\ReplaceWithStringIsNullOrEmptyIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\ReplaceWithStringIsNullOrEmptyIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\SimplifyConditionalTernaryExpressionIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\SimplifyConditionalTernaryExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\SimplifyLinqExpressionIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\SimplifyLinqExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\StringCompareIsCultureSpecificIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\StringCompareIsCultureSpecificIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\StringCompareToIsCultureSpecificIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\StringCompareToIsCultureSpecificIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\StringEndsWithIsCultureSpecificIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\StringEndsWithIsCultureSpecificIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\StringIndexOfIsCultureSpecificIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\StringIndexOfIsCultureSpecificIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\StringLastIndexOfIsCultureSpecificIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\StringLastIndexOfIsCultureSpecificIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\StringStartsWithIsCultureSpecificIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\StringStartsWithIsCultureSpecificIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\UseArrayCreationExpressionIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\UseArrayCreationExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\UseIsOperatorIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\UseIsOperatorIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\UseMethodAnyIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\UseMethodAnyIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\PracticesAndImprovements\UseMethodIsInstanceOfTypeIssue.cs">
      <Link>CodeIssues\PracticesAndImprovements\UseMethodIsInstanceOfTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\ArrayCreationCanBeReplacedWithArrayInitializerIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\ArrayCreationCanBeReplacedWithArrayInitializerIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\ConditionIsAlwaysTrueOrFalseIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\ConditionIsAlwaysTrueOrFalseIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\ConstantNullCoalescingConditionIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\ConstantNullCoalescingConditionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\DoubleNegationOperatorIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\DoubleNegationOperatorIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\EmptyStatementIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\EmptyStatementIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\ForStatementConditionIsTrueIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\ForStatementConditionIsTrueIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantAnonymousTypePropertyNameIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantAnonymousTypePropertyNameIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantArgumentDefaultValueIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantArgumentDefaultValueIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantArgumentNameIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantArgumentNameIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantAttributeParenthesesIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantAttributeParenthesesIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantBaseQualifierIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantBaseQualifierIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantBoolCompareIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantBoolCompareIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantCaseLabelIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantCaseLabelIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantCastIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantCastIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantCatchClauseIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantCatchClauseIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantCheckBeforeAssignmentIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantCheckBeforeAssignmentIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantCommaInArrayInitializerIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantCommaInArrayInitializerIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantComparisonWithNullIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantComparisonWithNullIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantDelegateCreationIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantDelegateCreationIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantEmptyDefaultSwitchBranchIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantEmptyDefaultSwitchBranchIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantEmptyFinallyBlockIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantEmptyFinallyBlockIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantEnumerableCastCallIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantEnumerableCastCallIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantExplicitArrayCreationIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantExplicitArrayCreationIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantExplicitArraySizeIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantExplicitArraySizeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantExplicitNullableCreationIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantExplicitNullableCreationIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantExtendsListEntryIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantExtendsListEntryIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantIfElseBlockIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantIfElseBlockIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantLambdaParameterTypeIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantLambdaParameterTypeIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantLambdaSignatureParenthesesIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantLambdaSignatureParenthesesIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantLogicalConditionalExpressionOperandIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantLogicalConditionalExpressionOperandIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantNameQualifierIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantNameQualifierIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantObjectCreationArgumentListIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantObjectCreationArgumentListIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantObjectOrCollectionInitializerIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantObjectOrCollectionInitializerIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantStringToCharArrayCallIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantStringToCharArrayCallIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantTernaryExpressionIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantTernaryExpressionIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantToStringCallForValueTypesIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantToStringCallForValueTypesIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantToStringCallIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantToStringCallIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantUnsafeContextIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantUnsafeContextIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RedundantUsingDirectiveIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RedundantUsingDirectiveIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\RemoveRedundantOrStatementIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\RemoveRedundantOrStatementIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInCode\UnusedAnonymousMethodSignatureIssue.cs">
      <Link>CodeIssues\RedundanciesInCode\UnusedAnonymousMethodSignatureIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\EmptyConstructorIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\EmptyConstructorIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\EmptyDestructorIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\EmptyDestructorIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\EmptyNamespaceIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\EmptyNamespaceIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\EnumUnderlyingTypeIsIntIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\EnumUnderlyingTypeIsIntIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\PartialTypeWithSinglePartIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\PartialTypeWithSinglePartIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\RedundantBaseConstructorCallIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\RedundantBaseConstructorCallIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\RedundantDefaultFieldInitializerIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\RedundantDefaultFieldInitializerIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\RedundantOverridenMemberIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\RedundantOverridenMemberIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\RedundantParamsIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\RedundantParamsIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\SealedMemberInSealedClassIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\SealedMemberInSealedClassIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\UnusedLabelIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\UnusedLabelIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\UnusedParameterIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\UnusedParameterIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\CodeIssues\Synced\RedundanciesInDeclaration\UnusedTypeParameterIssue.cs">
      <Link>CodeIssues\RedundanciesInDeclaration\UnusedTypeParameterIssue.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\NRefactoryCodeDiagnosticAnalyzerAttribute.cs">
      <Link>Common\NRefactoryCodeDiagnosticAnalyzerAttribute.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp.Refactoring\NRefactoryCodeRefactoringProviderAttribute.cs">
      <Link>Common\NRefactoryCodeRefactoringProviderAttribute.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp\Reflection\CSharpSyntaxContext.cs">
      <Link>Common\CSharpSyntaxContext.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp\Util\CSharpUtil.cs">
      <Link>Common\CSharpUtil.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp\Util\SymbolExtensions.cs">
      <Link>Common\SymbolExtensions.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp\Util\SyntaxExtensions.cs">
      <Link>Common\SyntaxExtensions.cs</Link>
    </Compile>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp\Util\TypeExtensions.cs">
      <Link>Common\TypeExtensions.cs</Link>
    </Compile>
    <Compile Include="..\NR6Pack.Refactorings\Common\CodeActionFactory.cs">
      <Link>Common\Refactorings\CodeActionFactory.cs</Link>
    </Compile>
    <Compile Include="..\NR6Pack.Refactorings\Common\DocumentChangeAction.cs">
      <Link>Common\Refactorings\DocumentChangeAction.cs</Link>
    </Compile>
    <Compile Include="..\NR6Pack.Refactorings\Common\Extensions.cs">
      <Link>Common\Refactorings\Extensions.cs</Link>
    </Compile>
    <Compile Include="..\NR6Pack.Refactorings\Common\NRefactoryCodeAction.cs">
      <Link>Common\Refactorings\NRefactoryCodeAction.cs</Link>
    </Compile>
    <Compile Include="Common\GatherVisitorBase.cs" />
    <Compile Include="Common\StringExtensions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="NR6Pack.Analyzers.nuspec">
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="tools\install.ps1" />
    <None Include="tools\uninstall.ps1" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Common.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Collections.Immutable">
      <HintPath>..\packages\System.Collections.Immutable.1.1.32-beta\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.AttributedModel">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Convention">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Hosting">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Runtime">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.TypedParts">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Reflection.Metadata">
      <HintPath>..\packages\System.Reflection.Metadata.1.0.17-beta\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="CodeIssues.html" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="CodeIssues\ConstraintViolations\InconsistentNamingIssue\" />
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>if exist Diagnostic.nuspec if exist "$(SolutionDir)\packages\NuGet.CommandLine.2.8.2\tools\NuGet.exe" "$(SolutionDir)\packages\NuGet.CommandLine.2.8.2\tools\NuGet.exe" pack Diagnostic.nuspec -OutputDirectory .</PostBuildEvent>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>