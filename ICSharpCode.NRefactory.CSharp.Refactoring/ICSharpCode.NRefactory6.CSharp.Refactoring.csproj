<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C465A5DC-AD28-49A2-89C0-F81838814A7E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>ICSharpCode.NRefactory.CSharp.Refactoring</RootNamespace>
    <AssemblyName>ICSharpCode.NRefactory6.CSharp.Refactoring</AssemblyName>
    <SignAssembly>false</SignAssembly>
    <AssemblyOriginatorKeyFile>..\ICSharpCode.NRefactory.snk</AssemblyOriginatorKeyFile>
    <DelaySign>False</DelaySign>
    <AssemblyOriginatorKeyMode>File</AssemblyOriginatorKeyMode>
    <DocumentationFile>..\bin\$(Configuration)\ICSharpCode.NRefactory6.CSharp.Refactoring.xml</DocumentationFile>
    <NoWarn>1591,1587,1570</NoWarn>
    <OutputPath>..\bin\$(Configuration)\</OutputPath>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Platform)' == 'AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <RegisterForComInterop>False</RegisterForComInterop>
    <GenerateSerializationAssemblies>Auto</GenerateSerializationAssemblies>
    <BaseAddress>4194304</BaseAddress>
    <FileAlignment>4096</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <Optimize>False</Optimize>
    <CheckForOverflowUnderflow>False</CheckForOverflowUnderflow>
    <DefineConstants>DEBUG;TRACE;FULL_AST;NET_4_0</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <Optimize>True</Optimize>
    <CheckForOverflowUnderflow>False</CheckForOverflowUnderflow>
    <DefineConstants>TRACE;FULL_AST;NET_4_0</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>none</DebugType>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\bin\Release</OutputPath>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugType>full</DebugType>
    <DebugSymbols>True</DebugSymbols>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\bin\Debug</OutputPath>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'net_4_5_Debug' ">
    <Optimize>False</Optimize>
    <CheckForOverflowUnderflow>False</CheckForOverflowUnderflow>
    <DefineConstants>DEBUG;TRACE;FULL_AST;NET_4_0;NET_4_5</DefineConstants>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'net_4_5_Debug|AnyCPU' ">
    <DebugType>full</DebugType>
    <DebugSymbols>True</DebugSymbols>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\bin\net_4_5_Debug</OutputPath>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'net_4_5_Release' ">
    <Optimize>True</Optimize>
    <CheckForOverflowUnderflow>False</CheckForOverflowUnderflow>
    <DefineConstants>TRACE;FULL_AST;NET_4_0;NET_4_5</DefineConstants>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'net_4_5_Release|AnyCPU' ">
    <DebugType>none</DebugType>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\bin\net_4_5_Release</OutputPath>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Core" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="Microsoft.CodeAnalysis">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Common.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Desktop">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.CSharp.Desktop.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces.Desktop">
      <HintPath>..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.CSharp.Workspaces.Desktop.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Desktop">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Common.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.Desktop.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces.Desktop">
      <HintPath>..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.0.0-rc1\lib\net45\Microsoft.CodeAnalysis.Workspaces.Desktop.dll</HintPath>
    </Reference>
    <Reference Include="System.Collections.Immutable, Version=1.1.33.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <HintPath>..\packages\System.Collections.Immutable.1.1.33-beta\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
    </Reference>
    <Reference Include="System.Composition.AttributedModel">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
    </Reference>
    <Reference Include="System.Composition.Convention">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
    </Reference>
    <Reference Include="System.Composition.Hosting">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
    </Reference>
    <Reference Include="System.Composition.Runtime">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="System.Composition.TypedParts">
      <HintPath>..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
    </Reference>
    <Reference Include="System.Reflection.Metadata">
      <HintPath>..\packages\System.Reflection.Metadata.1.0.18-beta\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\ICSharpCode.NRefactory.CSharp\Properties\GlobalAssemblyInfo.cs">
      <Link>Properties\GlobalAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="CodeRefactorings\Synced\AddAnotherAccessorCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\AddCatchExceptionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\AddExceptionDescriptionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\AddNameToArgumentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\AddNewFormatItemCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CheckIfParameterIsNullCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ComputeConstantValueCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertAnonymousMethodToLambdaCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertCoalescingToConditionalExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertDecToHexCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertEqualityOperatorToEqualsCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertEqualityOperatorToReferenceEqualsCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertEqualsToEqualityOperatorCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertExplicitToImplicitImplementationCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertForeachToForCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertHexToDecCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertIfStatementToConditionalTernaryExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertIfStatementToSwitchStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertImplicitToExplicitImplementationCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertLambdaBodyExpressionToStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertLambdaStatementToExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertLambdaToAnonymousMethodCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertMethodGroupToAnonymousMethodCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertMethodGroupToLambdaCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertReferenceEqualsToEqualityOperatorCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertSwitchToIfCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CopyCommentsFromBaseCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CreateEventInvocatorCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\FlipEqualsTargetAndArgumentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\FlipOperatorOperandsCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\FlipRelationalOperatorArgumentsCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\InsertAnonymousMethodSignatureCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\InvertConditionalOperatorCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\InvertIfCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\RemoveCatchExceptionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\InvokeAsStaticMethodCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\JoinLocalVariableDeclarationAndAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\JoinStringCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\NegateLogicalExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\RemoveRegionEndRegionDirectivesCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\AddBracesCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\RemoveBracesCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ReplaceAutoPropertyWithPropertyAndBackingFieldCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertAutoPropertyToPropertyCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ReplaceDirectCastWithSafeCastCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ReplacePropertyWithBackingFieldWithAutoPropertyCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ReplaceSafeCastWithDirectCastCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ReplaceExplicitTypeWithVarCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ReplaceVarWithExplicitTypeCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\SplitIfWithAndConditionInTwoCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\SplitIfWithOrConditionInTwoCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\SplitLocalVariableDeclarationAndAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ConvertHasFlagsToBitwiseFlagComparisonCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ConvertBitwiseFlagComparisonToHasFlagsCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\SpecializedCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\UseAsAndNullCheckCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\UseSystemStringEmptyCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\UseSystemEnvironmentNewLineCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ConvertForToWhileCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ConvertDoWhileToWhileLoopCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\NegateIsExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\InvertLogicalExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\GenerateSwitchLabelsCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ReplacePostfixExpressionWithAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ReplaceWithOperatorAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ReplaceAssignmentWithPostfixExpressionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ConvertShiftToMultiplyCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ReplaceOperatorAssignmentWithAssignmentCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ConvertMultiplyToShiftCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ExtractWhileConditionToInternalIfStatementCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Custom\ConvertWhileToDoWhileLoopCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ToAbstractVirtualNonVirtualConversionCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\AddOptionalParameterToInvocationAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\AutoLinqSumAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ChangeAccessModifierAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ConvertAssignmentToIfAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ConvertIfStatementToNullCoalescingExpressionAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ConvertIfStatementToReturnStatementAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ConvertReturnStatementToIfAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CopyCommentsFromInterface.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CreateChangedEventAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CreateCustomEventImplementationAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CreateDelegateAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CreateIndexerAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CreateOverloadWithoutParameterAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CS1105ExtensionMethodMustBeDeclaredStaticAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\CS1520MethodMustHaveAReturnTypeAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ExtractAnonymousMethodAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ExtractFieldAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\GenerateGetterAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\GeneratePropertyAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\IntroduceConstantAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\IterateViaForeachAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\LinqFluentToQueryAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\LinqQueryToFluentAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\MergeNestedIfAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\MoveToOuterScopeAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\PutInsideUsingAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\ReverseDirectionForForLoopAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\SortUsingsAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\SplitStringAction.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\SplitVariableIntoSeveralOnesCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Uncategorized\UseStringFormatAction.cs" />
    <Compile Include="Diagnostics\CodeActionFactory.cs" />
    <Compile Include="Diagnostics\DiagnosticFactory.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\PublicConstructorInAbstractClass.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeAny.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0127ReturnMustNotBeFollowedByAnyExpression.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0659OverrideEqualWithoutGetHashCode.cs" />
    <Compile Include="Diagnostics\NRefactoryCodeFixProvider.cs" />
    <Compile Include="Util\NRefactoryCodeDiagnosticAnalyzerAttribute.cs" />
    <Compile Include="Util\NRefactoryCodeRefactoringProviderAttribute.cs" />
    <Compile Include="Util\RefactoringHelpers.cs" />
    <Compile Include="Diagnostics\DiagnosticAnalyzerCategories.cs" />
    <Compile Include="Diagnostics\DiagnosticAnalyzerMarker.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0029InvalidConversionAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0126ReturnMustBeFollowedByAnyExpression.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0152DuplicateCaseLabelValueAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0169FieldIsNeverUsedAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0618UsageOfObsoleteMemberAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS0759RedundantPartialMethodAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\CS1729TypeHasNoConstructorWithNArgumentsAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\ExpressionIsNeverOfProvidedTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\MissingInterfaceMemberImplementationAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CompilerErrors\StaticConstructorParameterAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\AdditionalOfTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\BaseMethodParameterNameMismatchAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CallToObjectEqualsViaBaseAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CastExpressionOfIncompatibleTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\CheckNamespaceAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\ConstantConditionAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\ConvertIfToAndExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\LockThisAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\NegativeRelationalExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\NotImplementedExceptionAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\ParameterOnlyAssignedAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\RedundantAssignmentAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\RedundantInternalAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\RedundantPrivateAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\StaticEventSubscriptionAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\UnreachableCodeAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\VariableOnlyAssignedAnalyzer.cs" />
    <Compile Include="Diagnostics\Custom\XmlDocAnalyzer.cs" />
    <Compile Include="Diagnostics\Uncategorized\CS0108UseNewKeywordIfHidingIntendedAnalyzer.cs" />
    <Compile Include="Diagnostics\GatherVisitorDiagnosticAnalyzer.cs" />
    <Compile Include="Diagnostics\GatherVisitorBase.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\BaseMethodCallWithDefaultParameterAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\BitwiseOperatorOnEnumWithoutFlagsAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\CanBeReplacedWithTryCastAndCheckForNullAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\CompareNonConstrainedGenericWithNullAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\CompareOfFloatsByEqualityOperatorAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\ConditionalTernaryEqualBranchAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\DelegateSubtractionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\DoNotCallOverridableMethodsInConstructorAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\EmptyGeneralCatchClauseAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\EqualExpressionComparisonAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\EventUnsubscriptionViaAnonymousDelegateAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\ForControlVariableIsNeverModifiedAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\FormatStringProblemAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\FunctionNeverReturnsAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\LocalVariableHidesMemberAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\LongLiteralEndingLowerLAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\MemberHidesStaticFromOuterClassAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\MethodOverloadWithOptionalParameterAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\NonReadonlyReferencedInGetHashCodeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\NotResolvedInTextAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\ObjectCreationAsStatementAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\OperatorIsCanBeUsedAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\OptionalParameterHierarchyMismatchAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\OptionalParameterRefOutAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\ParameterHidesMemberAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\PartialMethodParameterNameMismatchAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\PolymorphicFieldLikeEventInvocationAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\PossibleAssignmentToReadonlyFieldAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\PossibleMultipleEnumerationAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\StaticFieldInGenericTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\ThreadStaticAtInstanceFieldAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CodeQuality\ValueParameterNotUsedAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CompilerErrors\ProhibitedModifiersAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CompilerWarnings\CS0183ExpressionIsAlwaysOfProvidedTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CompilerWarnings\CS1573ParameterHasNoMatchingParamTagAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CompilerWarnings\CS1717AssignmentMadeToSameVariableAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\CompilerWarnings\UnassignedReadonlyFieldAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\ConstraintViolations\InconsistentNaming\NamingConventionService.cs" />
    <Compile Include="Diagnostics\Synced\ConstraintViolations\InconsistentNaming\NamingRule.cs" />
    <Compile Include="Diagnostics\Synced\ConstraintViolations\InconsistentNaming\NamingStyle.cs" />
    <Compile Include="Diagnostics\Synced\ConstraintViolations\InconsistentNaming\AffectedEntity.cs" />
    <Compile Include="Diagnostics\Synced\ConstraintViolations\InconsistentNaming\DefaultRules.cs" />
    <Compile Include="Diagnostics\Synced\ConstraintViolations\InconsistentNaming\Modifiers.cs" />
    <Compile Include="Diagnostics\Synced\ConstraintViolations\InconsistentNaming\InconsistentNamingAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\NUnit\NonPublicMethodWithTestAttributeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertClosureToMethodGroupAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertConditionalTernaryToNullCoalescingAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertIfStatementToConditionalTernaryExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertIfStatementToNullCoalescingExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertIfStatementToSwitchStatementAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertNullableToShortFormAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertToAutoPropertyAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertToLambdaExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ConvertToStaticTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\ForCanBeConvertedToForeachAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\InvokeAsExtensionMethodAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\RewriteIfReturnToReturnAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\Opportunities\SuggestUseVarKeywordEvidentAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\EmptyConstructorAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\EmptyDestructorAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\EmptyNamespaceAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\EnumUnderlyingTypeIsIntAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\LocalVariableNotUsedAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\PartialTypeWithSinglePartAnalyzer.cs">
      <DependentUpon>RedundantBaseConstructorCallAnalyzer.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\RedundantBaseConstructorCallAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\RedundantDefaultFieldInitializerAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\RedundantOverriddenMemberAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\RedundantParamsAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\SealedMemberInSealedClassAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\UnusedLabelAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\UnusedParameterAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInDeclaration\UnusedTypeParameterAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\ArrayCreationCanBeReplacedWithArrayInitializerAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\ConditionIsAlwaysTrueOrFalseAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\ConstantNullCoalescingConditionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\DoubleNegationOperatorAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\EmptyStatementAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\ForStatementConditionIsTrueAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantAnonymousTypePropertyNameAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantArgumentDefaultValueAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantArgumentNameAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantAttributeParenthesesAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantBaseQualifierAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantBoolCompareAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantCaseLabelAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantCastAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantCatchClauseAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantCheckBeforeAssignmentAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantCommaInArrayInitializerAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantComparisonWithNullAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantDelegateCreationAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantEmptyDefaultSwitchBranchAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantEmptyFinallyBlockAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantEnumerableCastCallAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantExplicitArrayCreationAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantExplicitArraySizeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantExplicitNullableCreationAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantExtendsListEntryAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantIfElseBlockAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantLambdaParameterTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantLambdaSignatureParenthesesAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantLogicalConditionalExpressionOperandAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantNameQualifierAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantObjectCreationArgumentListAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantObjectOrCollectionInitializerAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantStringToCharArrayCallAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantTernaryExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantThisQualifierAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantToStringCallForValueTypesAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantToStringCallAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantUnsafeContextAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RedundantUsingDirectiveAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\RemoveRedundantOrStatementAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\RedundanciesInCode\UnusedAnonymousMethodSignatureAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\UseMethodIsInstanceOfTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\UseMethodAnyAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\UseIsOperatorAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\UseArrayCreationExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\StringStartsWithIsCultureSpecificAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\StringLastIndexOfIsCultureSpecificAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\StringIndexOfIsCultureSpecificAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\StringEndsWithIsCultureSpecificAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\StringCompareToIsCultureSpecificAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\StringCompareIsCultureSpecificAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\SimplifyLinqExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\SimplifyConditionalTernaryExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithStringIsNullOrEmptyAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToSingleAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLongCountAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToLastAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToFirstAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToCountAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSingleCallToAnyAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithSimpleAssignmentAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeWhereAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeSingleAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLongCountAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeLastAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeFirstAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithOfTypeCountAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithLastOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReplaceWithFirstOrDefaultAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ReferenceEqualsWithValueTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\PossibleMistakenCallToGetTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ParameterCanBeDeclaredWithBaseTypeAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\MemberCanBeMadeStaticAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\FieldCanBeMadeReadOnlyAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\EmptyEmbeddedStatementAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ConvertToConstantAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ConvertIfToOrExpressionAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\ConvertIfDoToWhileAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\BaseMemberHasParamsAnalyzer.cs" />
    <Compile Include="Diagnostics\Synced\PracticesAndImprovements\AccessToStaticMemberViaDerivedTypeAnalyzer.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertStatementBodyToExpressionBodyCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\ConvertExpressionBodyToStatementBodyCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CheckArrayIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CheckCollectionIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CheckStringIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CheckStringBuilderIndexValueCodeRefactoringProvider.cs" />
    <Compile Include="CodeRefactorings\Synced\CheckDictionaryKeyValueCodeRefactoringProvider.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <TextStylePolicy FileWidth="120" TabsToSpaces="False" EolMarker="Unix" inheritsSet="VisualStudio" inheritsScope="text/plain" scope="text/x-csharp" />
          <CSharpFormattingPolicy inheritsSet="Mono" inheritsScope="text/x-csharp" scope="text/x-csharp" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
  <ItemGroup>
    <ProjectReference Include="..\ICSharpCode.NRefactory.CSharp\ICSharpCode.NRefactory6.CSharp.csproj">
      <Project>{7E891659-45F3-42B5-B940-A728780CCAE9}</Project>
      <Name>ICSharpCode.NRefactory6.CSharp</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0-rc1\tools\analyzers\C#\Microsoft.CodeAnalysis.CSharp.Analyzers.dll" />
    <Analyzer Include="..\packages\Microsoft.CodeAnalysis.Analyzers.1.0.0-rc1\tools\analyzers\Microsoft.CodeAnalysis.Analyzers.dll" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <!--Target below is executed only when $(SolutionDir) is not one folder above from this.csproj(so not when used in NRefactory.sln).
      This is useful when project is included in other solutions then NRefactory.sln(e.g. as git submodule) in IDE project.
      In that case NuGet restores packages in Packages folder of that solution and not in ..\Packages where this project references expect:
      <Reference Include="Some.NuGet.Project">
        <HintPath>..\packages\Some.NuGet.Project\lib\net45\Some.NuGet.Project.dll</HintPath>
      </Reference>
  -->
  <Target Name="RestorePackages" AfterTargets="EnsureNuGetPackageBuildImports">
    <PropertyGroup>
      <NuGet>$(SolutionDir)\.nuget\NuGet.exe</NuGet>
      <NuGet Condition="$(OS)=='Unix'">mono $(NuGet)</NuGet>
    </PropertyGroup>
    <Exec Condition="$(SolutionDir) != $([System.IO.Path]::GetFullPath('..'))" Command="$(NuGet) restore -SolutionDirectory .." />
  </Target>
  <ItemGroup>
    <Folder Include="CodeRefactorings\Synced\" />
    <Folder Include="CodeRefactorings\Uncategorized\" />
    <Folder Include="CodeRefactorings\Custom\" />
    <Folder Include="Util\" />
  </ItemGroup>
</Project>